

/**
 * dp含义
 * n=234,第一位（最高位）填的1，那么继续递归，后面就可以随便填，
 * 所以dp[1][2]就表示前面填了一个1（对应的mask=2),从第二位开始，随便填的方案数
 * 
 * dp数组的行表示从左到右第几位，dp的列表示这个位填的数字，n=234,
 * dp[0][2]表示数字的百位填的数字是1，dp[0][2]的值表示以数字1开头的百位数对应的可行方案数
 * 
 * 前三位取值集合mask=1110,对应的集合是{1，2，3}，
 * 132XXX和123XXX的第4及之后的可能性是一样的都为dp[3][14]
 * 
 * 位运算和集合论
 * {0,2,3} 对应的二进制为 1101
 * 设集合对应的二进制数为x
 * 1、d是否在集合中 x>>d&1 == 1
 * 2、将元素d添加到集合中， 将x更新为 x | (1 << d)
 * 
 * n转化成字符串，定义f(i,mask,isLimit,isNum)
 * mask： 表示前面选过的数字集合，第i位要选的数字不能在mask中
 * isLimit： 当前是否受到n的约束， 
 * 若为真，第i位填入的数字至多为s[i],如果填的是s[i],则后续都会受到影响
 * 否则可以是9
 * isNum表示i前面的数位是否填了数字
 * 若为假，则当前位可以跳过（不填数字），或者至少填入1
 * 若为真，则填入的数字可以从0开始
 * 
*/

int numDupDigitsAtMostN(int n) {

}